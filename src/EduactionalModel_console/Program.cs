
// This file was auto-generated by ML.NET Model Builder. 

using EduactionalModel_console;
using Google.Apis;
using Google.Apis.YouTube.v3;
using Google.Apis.Services;
Console.WriteLine("Enter link here:");
string url = Console.ReadLine();
string toFind1 = "?v=";
string toFind2 = "&ab";
int start = url.IndexOf(toFind1) + toFind1.Length;
int end = url.IndexOf(toFind2, start); //Start after the index of 'my' since 'is' appears twice
if (end == -1)
{
    end = url.Length;
}
string string2 = url.Substring(start, end - start);
using (var youtubeService = new YouTubeService(new BaseClientService.Initializer()
{
    ApiKey = "AIzaSyAtOeh2lPTmqQ6Ncw1Jn1zRi0deYAaTqEo",
}))
{
    var searchRequest = youtubeService.Videos.List("snippet");
    searchRequest.Id = string2;
    var searchResponse = await searchRequest.ExecuteAsync();

    var youTubeVideo = searchResponse.Items.FirstOrDefault();
    if (youTubeVideo != null)
    {
        string Title1 = youTubeVideo.Snippet.Title;
      
        string channeltitle = youTubeVideo.Snippet.ChannelTitle;
        MLModel1.ModelInput sampleData = new MLModel1.ModelInput()
        {
            Title = @Title1,
            Channel_title = @channeltitle,
            Tags=""
        };


        

        // Make a single prediction on the sample data and print results
        var predictionResult = MLModel1.Predict(sampleData);
        string k = "broken";
        if (predictionResult.PredictedLabel == "1")
        {
            k = "Educational";
        }
        if (predictionResult.PredictedLabel == "0")
        {
            k = "Non Educational";
        }
        if (k=="Non Educational")
        {
            if (Title1.Contains("science") || Title1.Contains("Science") || Title1.Contains("study") || Title1.Contains("Study") || Title1.Contains("Universe") || Title1.Contains("universe") || Title1.Contains("Math") || Title1.Contains("chemistry") || Title1.Contains("business") || Title1.Contains("Business") || Title1.Contains("marketing") || Title1.Contains("excel") || Title1.Contains("Excel") || Title1.Contains("Physics") || Title1.Contains("physics") || Title1.Contains("learn") || Title1.Contains("Learn") || Title1.Contains("coding") || Title1.Contains("programming") || Title1.Contains("computer") || Title1.Contains("Computer") || Title1.Contains("cs") || Title1.Contains("CS") || Title1.Contains("ML") || Title1.Contains("Machine") || Title1.Contains("How to") || Title1.Contains("Tutorial") || Title1.Contains("tutorial") || Title1.Contains("Research") || Title1.Contains("research") || Title1.Contains("Code") || Title1.Contains("code") || Title1.Contains("Yoga") || Title1.Contains("yoga") || Title1.Contains("Courses") || Title1.Contains("courses") || Title1.Contains("Course") || Title1.Contains("course") || Title1.Contains("syllabus") || Title1.Contains("Electricity") || Title1.Contains("electricity") || Title1.Contains("economics") || Title1.Contains("Web") || Title1.Contains("web") || Title1.Contains("Economics") || Title1.Contains("hacking") || Title1.Contains("Hacking") || Title1.Contains("Engineering") || Title1.Contains("engineering") || Title1.Contains("entrepreneur") || Title1.Contains("Entrepreneur") || Title1.Contains("Meditation") || Title1.Contains("Biology") || Title1.Contains("biology") || Title1.Contains("unacademy") || Title1.Contains("NEET") || Title1.Contains("JEE") || Title1.Contains("Unacademy") || Title1.Contains("Presentation") || Title1.Contains("presentation") || Title1.Contains("nuclear") || Title1.Contains("Nuclear") || Title1.Contains("Algorithm") || Title1.Contains("data") || Title1.Contains("Data") || Title1.Contains("evolution") || Title1.Contains("experiment") || Title1.Contains("Experiment") || Title1.Contains("NASA") || Title1.Contains("Invent") || Title1.Contains("environment") || Title1.Contains("data") || Title1.Contains("Data") || Title1.Contains("Pandemic") || Title1.Contains("Crypto") || Title1.Contains("UPSC") || Title1.Contains("Maths") || Title1.Contains("upsc") || Title1.Contains("DNA") || Title1.Contains("dna") || Title1.Contains("radiation") || Title1.Contains("Technology") || Title1.Contains("linux") || Title1.Contains("technology") || Title1.Contains("Microsoft") || Title1.Contains("linux") || Title1.Contains("tech") || Title1.Contains("Tech") || Title1.Contains("Learning") || Title1.Contains("learning") || Title1.Contains("OS") || Title1.Contains("equation") || Title1.Contains("Equation") || Title1.Contains("literature") || Title1.Contains("calculus") || Title1.Contains("java") || Title1.Contains("open source") || Title1.Contains("laptop") || Title1.Contains("architecture") || Title1.Contains("Architecture") || Title1.Contains("github") || Title1.Contains("Github")){
                k = "Educational";
            }
        }
        Console.WriteLine("Using model to make single prediction -- \n\n");
        Console.WriteLine($"Title: {@Title1}");
        Console.WriteLine($"Channel Title: {channeltitle}");

        Console.WriteLine($"\n\nPredicted Category: {k}\n\n");
        Console.WriteLine("=============== End of process, hit any key to finish ===============");
        Console.ReadKey();
    }
}